#include<stdio.h>
#include<stdlib.h>

struct Angka {
	int value;
	Angka *next;
	Angka *prev;
} *head, *tail, *cur, *del, *newNode, *temp;


//doubly lingkedlist
//Buat
void createDLL(int val) {
	head = new Angka();
	head->value = val;
	head->next = NULL;
	head->prev = NULL;
	tail = head;
}
//Tambah
void addFirst(int val) {
	newNode = new Angka();
	newNode->value = val;
	newNode->prev = NULL;
	newNode->next = head;
	head = newNode;
}
void addMid(int val, int index) {
	newNode = new Angka();
	newNode->value = val;
	cur = head;
	int count = 1;
	while(count < index) {
		cur = cur->next;
		count++;
	}
	newNode->prev = cur;
	newNode->next = cur->next;
	cur->next = newNode;
	
	cur = newNode->next;
	cur->prev = newNode;
}
void addLast(int val) {
	newNode = new Angka();
	newNode->value = val;
	newNode->prev = tail;
	newNode->next = NULL;
	tail->next = newNode;
	tail = newNode;
}
//Hapus
void removeFirst() {
	del = head;
	head = del->next;
	head->prev = NULL;
	delete del;
}
void removeMid(int index) {
	cur = head;
	int count = 1;
	while(count < index) {
		cur = cur->next;
		count++;
	}
	del = cur;
	cur = cur->prev;
	temp = del->next;
	temp->prev = cur;
	cur->next = temp;
	
	delete del;
}
void removeLast() {
	del = tail;
	tail = tail->prev;
	tail->next = NULL;
	delete del;
}

void printDLL() {
	cur = head;
	int count = 1;
	while(cur != NULL) {
		printf("Value %d : %d\n", count, cur->value);
		cur = cur->next;
		count++;
	}
	printf("\n===============================\n\n");
}


//stack

int maksimal = 5;

int count(){
	if(head == NULL){
		return 0;
	}else{
		int banyak = 0;
		cur = head;
		while(cur != NULL){
			cur = cur -> next;
			banyak++;
		}
		return banyak;
	}	
}

void push(){
	if(count() == maksimal){
		printf("\nStack full\n");
	}else if(count() == 0){
		createDLL(1);
	}else{
		int i;
		addLast(i);
	}
}

void pop(){
	removeLast();
}



void display(){
	if(head == NULL){
		printf("stack kosong\n");
	}else{
		int banyak = 0;
		cur = tail;
		printf("\n\n---Stack---\n");
		while(cur != NULL){
			printf("stack : %d\n", cur->value);
			cur = cur -> prev;
			
		}
	}	
}



int main() {
	puts("Double Lingkedlist");
	createDLL(1);
	for(int i = 2; i < 10; i++) {
		addLast(i);
	}
	printDLL();
	
	addFirst(20);
	addMid(555, 6);
	addLast(30);
	
	removeFirst();
	removeLast();
	removeMid(5);
	
	puts("Double Lingkedlist");
	printDLL();
	
	
	
	display();
	pop();
	display();
	return 0;
}
