#include <stdio.h>
#include <stdlib.h>
#define MAX 5

struct Angka {
	int value;
	Angka *next;
	Angka *prev;
} *top, *del;

Angka *createDLL(int val) {
	Angka *newNode = (Angka*)malloc(sizeof(Angka));
	newNode->value = val;
	newNode->next = NULL;
	newNode->prev = NULL;
	return newNode;
}
void addLast(int val) {
	Angka *newNode = createDLL(val);
	newNode->prev = top;
	top->next = newNode; 
	top = newNode;
}
void removeLast() {
	del = top;
	top = top->prev;
	top->next = NULL;
	delete del;
}

int count(){
	int banyak = 0;
	Angka *cur = top;
	while(cur != NULL){
		cur = cur -> prev;
		banyak++;
	}
	return banyak;	
}

void push(int val){
	if(count() >= MAX){
		printf("\nStack Overflow\n");
	}else if(top == NULL){
		Angka *newNode = createDLL(val);
		top = newNode;
	}else{
		addLast(val);
	}
}

void pop(){
	if(top == NULL) {
		printf("Stack tidak ditemukan!\n");
	}else if(top->next == NULL && top->prev == NULL) {
		free(top);
		top = NULL;
		printf("Stack dihapus!\n");
	}else{
		removeLast();
		printf("top dihapus!\n");
	}
}



void display(){
	if(top == NULL){
		printf("stack kosong\n");
	}else{
		int banyak = 0;
		Angka *cur = top;
		printf("\n\n---Stack---\n");
		while(cur != NULL){
			printf("stack : %d\n", cur->value);
			cur = cur -> prev;
			
		}
	}	
}

int main() {
	push(1);
	push(2);
	push(3);
	push(4);
	push(5);
	push(6);
	pop();
	pop();
	display();

	return 0;
}
